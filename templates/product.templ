package templates

import (
	"fmt"
	"gocommerce/models"
)

templ ProductDetail(product models.Product, cartCount int) {
	@Layout(product.Name) {
		@Navigation(cartCount)
		
		// Breadcrumb
		<div class="max-w-7xl mx-auto px-6 py-4">
			<nav class="text-sm text-gray-500">
				<a href="/" class="hover:text-gray-700">Products</a>
				<span class="mx-2">/</span>
				<span class="text-gray-900">{ product.Name }</span>
			</nav>
		</div>

		// Product Detail with Alpine.js
		<div class="max-w-7xl mx-auto px-6 py-8" x-data={`{
			quantity: 1,
			selectedColor: '` + product.Colors[0] + `',
			selectedSize: '` + product.Sizes[0] + `',
			activeImage: 0,
			images: [
				'` + product.Image + `',
				'https://images.pexels.com/photos/125779/pexels-photo-125779.jpeg?auto=compress&cs=tinysrgb&w=200',
				'https://images.pexels.com/photos/280250/pexels-photo-280250.jpeg?auto=compress&cs=tinysrgb&w=200',
				'https://images.pexels.com/photos/1697214/pexels-photo-1697214.jpeg?auto=compress&cs=tinysrgb&w=200'
			]
		}`}>
			<div class="grid grid-cols-2 gap-12">
				// Product Images with Alpine.js gallery
				<div class="space-y-4">
					<div class="aspect-square bg-gray-100 rounded-lg overflow-hidden">
						<img :src="images[activeImage]" alt={ product.Name } class="w-full h-full object-cover"/>
					</div>
					<div class="grid grid-cols-4 gap-2">
						<template x-for="(image, index) in images" :key="index">
							<div 
								class="aspect-square bg-gray-100 rounded border-2 cursor-pointer"
								:class="activeImage === index ? 'border-blue-500' : 'border-gray-200 hover:border-gray-300'"
								@click="activeImage = index"
							>
								<img :src="image" :alt="`View ${index + 1}`" class="w-full h-full object-cover"/>
							</div>
						</template>
					</div>
				</div>

				// Product Info
				<div class="space-y-6">
					<div>
						<h1 class="text-3xl font-bold text-gray-900 mb-2">{ product.Name }</h1>
						<p class="text-gray-600">{ product.Description }</p>
					</div>

					<div class="flex items-center space-x-4">
						<span class="text-3xl font-bold text-gray-900">${ fmt.Sprintf("%.0f", product.Price) }</span>
						<span class="text-lg text-gray-500 line-through">${ fmt.Sprintf("%.0f", product.Price * 1.33) }</span>
						<span class="bg-red-100 text-red-800 px-2 py-1 rounded text-sm font-medium">25% OFF</span>
					</div>

					<div class="flex items-center space-x-2">
						<div class="flex text-yellow-400">
							for i := 0; i < 5; i++ {
								<svg class="w-5 h-5 fill-current" viewBox="0 0 20 20">
									<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
								</svg>
							}
						</div>
						<span class="text-gray-600">(124 reviews)</span>
					</div>

					<form 
						method="POST"
						action={ templ.SafeURL(fmt.Sprintf("/cart/add/%d", product.ID)) }
						hx-post={ fmt.Sprintf("/cart/add/%d", product.ID) }
						hx-trigger="submit"
						hx-target="#cart-badge"
						hx-swap="innerHTML"
					>
						<div class="space-y-4">
							// Color selection with Alpine.js
							<div>
								<label class="block text-sm font-medium text-gray-700 mb-2">Color</label>
								<div class="flex space-x-2">
									for _, color := range product.Colors {
										<div 
											class="px-4 py-2 border-2 rounded-lg transition-colors cursor-pointer"
											:class={`selectedColor === '` + color + `' ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-gray-400'`}
											@click={`selectedColor = '` + color + `'`}
										>
											{ color }
										</div>
									}
								</div>
								<input type="hidden" name="color" x-model="selectedColor"/>
							</div>

							// Size selection with Alpine.js
							<div>
								<label class="block text-sm font-medium text-gray-700 mb-2">Size</label>
								<div class="flex space-x-2">
									for _, size := range product.Sizes {
										<div 
											class="px-4 py-2 border-2 rounded-lg transition-colors cursor-pointer"
											:class={`selectedSize === '` + size + `' ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-gray-400'`}
											@click={`selectedSize = '` + size + `'`}
										>
											{ size }
										</div>
									}
								</div>
								<input type="hidden" name="size" x-model="selectedSize"/>
							</div>

							// Quantity selector with Alpine.js
							<div>
								<label class="block text-sm font-medium text-gray-700 mb-2">Quantity</label>
								<div class="flex items-center space-x-2">
									<div 
										class="w-10 h-10 border rounded-lg flex items-center justify-center hover:bg-gray-50 cursor-pointer"
										@click="quantity = Math.max(1, quantity - 1)"
									>-</div>
									<input 
										type="number" 
										name="quantity"
										x-model="quantity" 
										class="w-16 text-center border rounded-lg py-2"
										min="1"
									/>
									<div 
										class="w-10 h-10 border rounded-lg flex items-center justify-center hover:bg-gray-50 cursor-pointer"
										@click="quantity++"
									>+</div>
								</div>
							</div>
						</div>

						<div class="mt-6">
							<button 
								type="submit" 
								class="w-full bg-blue-600 text-white px-8 py-4 rounded-lg hover:bg-blue-700 transition-colors duration-200 font-semibold text-lg shadow-md hover:shadow-lg"
							>
								Add to Cart
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	}
}